{"title":"最大公因数GCD","uid":"9d8d702581fafe91f0e84d17245c7b9e","slug":"最大公因数GCD","date":"2023-02-18T10:47:55.939Z","updated":"2022-01-12T11:25:28.992Z","comments":true,"path":"api/articles/最大公因数GCD.json","keywords":null,"cover":null,"content":"<h1 id=\"最大公因数gcd\">最大公因数GCD</h1>\r\n<h3 id=\"原理\">原理</h3>\r\n<p>利用了欧几里得算法，即辗转相除法</p>\r\n<p>核心等式——<code>gcd(a,b) = gcd(b,a mod b)</code></p>\r\n<h3 id=\"证明\">证明</h3>\r\n<p>a可以表示成a = kb + r（a，b，k，r皆为正整数)</p>\r\n<p>假设d是a,b的一个公约数，记作d|a,d|b) 即a和b都可以被d整除。</p>\r\n<p>而r = a - kb，两边同时除以d</p>\r\n<p>r/d=a/d-kb/d，由等式右边可知m=r/d为整数，因此d|r</p>\r\n<p>因此d也是b,a mod b的公约数。</p>\r\n<p>因(a,b)和(b,a mod b)的公约数相等，则其最大公约数也相等，得证。</p>\r\n<h3 id=\"算法实现\">算法实现</h3>\r\n<ul>\r\n<li><p>简单方法 <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"type\">int</span> m,<span class=\"type\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;    </span><br><span class=\"line\">    <span class=\"type\">int</span> t,r;    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (m&lt;n)        <span class=\"comment\">//为了确保是大数除小数    </span></span><br><span class=\"line\">    &#123;        </span><br><span class=\"line\">        t=m;        </span><br><span class=\"line\">        m=n;       </span><br><span class=\"line\">        n=t;    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">while</span>((m%n)!=<span class=\"number\">0</span>) <span class=\"comment\">//辗转相除    </span></span><br><span class=\"line\">    &#123;        </span><br><span class=\"line\">        r=m%n;        </span><br><span class=\"line\">        m=n;        </span><br><span class=\"line\">        n=r;    </span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>递归方法 <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;\t<span class=\"keyword\">if</span> (y)\t\t\t</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">gcd</span>(y, x%y);\t\t</span><br><span class=\"line\">        <span class=\"keyword\">else</span>\t\t\t</span><br><span class=\"line\">            <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p></li>\r\n<li><p>位运算算法 <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(y^=x^=y^=x%=y);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p></li>\r\n</ul>\r\n","feature":true,"text":"最大公因数GCD 原理 利用了欧几里得算法，即辗转相除法 核心等式——gcd(a,b) = gcd(b,a mod b) 证明 a可以表示成a = kb + r（a，b，k，r皆为正整数) 假设d是a,b的一个公约数，记作d|a,d|b) 即a和b都可以被d整除。 而r = a ...","link":"","photos":[],"count_time":{"symbolsCount":826,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":11,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":11,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B0gcd\"><span class=\"toc-text\">最大公因数GCD</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%81%E6%98%8E\"><span class=\"toc-text\">证明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">算法实现</span></a></li></ol></li></ol></li></ol>","author":{"name":"碔砆","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"BUPT AI专业大二学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"信息论","uid":"a0a717998dbf88c81be122d0bce3bca3","slug":"信息论","date":"2023-02-18T10:32:18.000Z","updated":"2023-02-18T10:44:30.881Z","comments":true,"path":"api/articles/信息论.json","keywords":null,"cover":null,"text":"Information Theory MLAPP 2.8 Preface 信息论(Information Theory)：应用数学的一个分支，涉及用紧凑的方法来表示数据（如数据压缩和编码），以及具有鲁棒性的储存和传输数据。在机器学习中，信息论常常应用于连续型变量 信息论的基本想法...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"AI学习","slug":"AI学习","count":4,"path":"api/categories/AI学习.json"}],"tags":[{"name":"AI学习","slug":"AI学习","count":4,"path":"api/tags/AI学习.json"}],"author":{"name":"碔砆","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"BUPT AI专业大二学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}