{"title":"最大公因数GCD","uid":"9d8d702581fafe91f0e84d17245c7b9e","slug":"最大公因数GCD","date":"2023-02-18T10:47:55.939Z","updated":"2022-01-12T11:25:28.992Z","comments":true,"path":"api/articles/最大公因数GCD.json","keywords":null,"cover":null,"content":"<h1 id=\"最大公因数gcd\">最大公因数GCD</h1>\r\n<h3 id=\"原理\">原理</h3>\r\n<p>利用了欧几里得算法，即辗转相除法</p>\r\n<p>核心等式——<code>gcd(a,b) = gcd(b,a mod b)</code></p>\r\n<h3 id=\"证明\">证明</h3>\r\n<p>a可以表示成a = kb + r（a，b，k，r皆为正整数)</p>\r\n<p>假设d是a,b的一个公约数，记作d|a,d|b) 即a和b都可以被d整除。</p>\r\n<p>而r = a - kb，两边同时除以d</p>\r\n<p>r/d=a/d-kb/d，由等式右边可知m=r/d为整数，因此d|r</p>\r\n<p>因此d也是b,a mod b的公约数。</p>\r\n<p>因(a,b)和(b,a mod b)的公约数相等，则其最大公约数也相等，得证。</p>\r\n<h3 id=\"算法实现\">算法实现</h3>\r\n<ul>\r\n<li><p>简单方法 <pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>    \n    <span class=\"token keyword\">int</span> t<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">;</span>    \n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">)</span>        <span class=\"token comment\">//为了确保是大数除小数    </span>\n    <span class=\"token punctuation\">&#123;</span>        \n        t<span class=\"token operator\">=</span>m<span class=\"token punctuation\">;</span>        \n        m<span class=\"token operator\">=</span>n<span class=\"token punctuation\">;</span>       \n        n<span class=\"token operator\">=</span>t<span class=\"token punctuation\">;</span>    \n    <span class=\"token punctuation\">&#125;</span>    \n \n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">%</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//辗转相除    </span>\n    <span class=\"token punctuation\">&#123;</span>        \n        r<span class=\"token operator\">=</span>m<span class=\"token operator\">%</span>n<span class=\"token punctuation\">;</span>        \n        m<span class=\"token operator\">=</span>n<span class=\"token punctuation\">;</span>        \n        n<span class=\"token operator\">=</span>r<span class=\"token punctuation\">;</span>    \n    <span class=\"token punctuation\">&#125;</span>   \n \n    <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></li>\r\n<li><p>递归方法 <pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\t\t\t\n            <span class=\"token keyword\">return</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> x<span class=\"token operator\">%</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\n        <span class=\"token keyword\">else</span>\t\t\t\n            <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></li>\r\n<li><p>位运算算法 <pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>y<span class=\"token operator\">^=</span>x<span class=\"token operator\">^=</span>y<span class=\"token operator\">^=</span>x<span class=\"token operator\">%=</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></p></li>\r\n</ul>\r\n","text":"最大公因数GCD 原理 利用了欧几里得算法，即辗转相除法 核心等式——gcd(a,b) = gcd(b,a mod b) 证明 a可以表示成a = kb + r（a，b，k，r皆为正整数) 假设d是a,b的一个公约数，记作d|a,d|b) 即a和b都可以被d整除。 而r = a ...","link":"","photos":[],"count_time":{"symbolsCount":813,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":11,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":11,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B0gcd\"><span class=\"toc-text\">最大公因数GCD</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%81%E6%98%8E\"><span class=\"toc-text\">证明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">算法实现</span></a></li></ol></li></ol></li></ol>","author":{"name":"碔砆","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/02/20/pSXmfmj.jpg","link":"/","description":"BUPT AI专业大二学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"LeNet","uid":"139386a48ee9ff8eae54fecf132447a0","slug":"LeNet","date":"2023-02-20T10:33:27.000Z","updated":"2023-02-20T12:45:01.242Z","comments":true,"path":"api/articles/LeNet.json","keywords":null,"cover":[],"text":"LeNet Introduction 这是世界上最早发布的卷积神经网络之一，由AT&amp;T贝尔实验室的研究员Yann LeCun在1989年提出的（并以其命名） 目的是识别图像 MNIST 中的手写数字 当时，Yann LeCun发表了第一篇通过反向传播成功训练卷积神经网络的...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"AI学习","slug":"AI学习","count":8,"path":"api/categories/AI学习.json"}],"tags":[{"name":"AI学习","slug":"AI学习","count":8,"path":"api/tags/AI学习.json"}],"author":{"name":"碔砆","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/02/20/pSXmfmj.jpg","link":"/","description":"BUPT AI专业大二学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"信息论","uid":"a0a717998dbf88c81be122d0bce3bca3","slug":"信息论","date":"2023-02-18T10:32:18.000Z","updated":"2023-02-18T10:44:30.881Z","comments":true,"path":"api/articles/信息论.json","keywords":null,"cover":null,"text":"Information Theory MLAPP 2.8 Preface 信息论(Information Theory)：应用数学的一个分支，涉及用紧凑的方法来表示数据（如数据压缩和编码），以及具有鲁棒性的储存和传输数据。在机器学习中，信息论常常应用于连续型变量 信息论的基本想法...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"AI学习","slug":"AI学习","count":8,"path":"api/categories/AI学习.json"}],"tags":[{"name":"AI学习","slug":"AI学习","count":8,"path":"api/tags/AI学习.json"}],"author":{"name":"碔砆","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/02/20/pSXmfmj.jpg","link":"/","description":"BUPT AI专业大二学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}