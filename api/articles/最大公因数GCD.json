{"title":"最大公因数GCD","uid":"9d8d702581fafe91f0e84d17245c7b9e","slug":"最大公因数GCD","date":"2023-02-25T14:29:59.174Z","updated":"2022-01-12T11:25:28.992Z","comments":true,"path":"api/articles/最大公因数GCD.json","keywords":null,"cover":null,"content":"<h1 id=\"最大公因数gcd\">最大公因数GCD</h1>\r\n<h3 id=\"原理\">原理</h3>\r\n<p>利用了欧几里得算法，即辗转相除法</p>\r\n<p>核心等式——<code>gcd(a,b) = gcd(b,a mod b)</code></p>\r\n<h3 id=\"证明\">证明</h3>\r\n<p>a可以表示成a = kb + r（a，b，k，r皆为正整数)</p>\r\n<p>假设d是a,b的一个公约数，记作d|a,d|b) 即a和b都可以被d整除。</p>\r\n<p>而r = a - kb，两边同时除以d</p>\r\n<p>r/d=a/d-kb/d，由等式右边可知m=r/d为整数，因此d|r</p>\r\n<p>因此d也是b,a mod b的公约数。</p>\r\n<p>因(a,b)和(b,a mod b)的公约数相等，则其最大公约数也相等，得证。</p>\r\n<h3 id=\"算法实现\">算法实现</h3>\r\n<ul>\r\n<li><p>简单方法 <pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">int gcd(int m,int n)\n&#123;    \n    int t,r;    \n    if (m&lt;n)        &#x2F;&#x2F;为了确保是大数除小数    \n    &#123;        \n        t&#x3D;m;        \n        m&#x3D;n;       \n        n&#x3D;t;    \n    &#125;    \n \n    while((m%n)!&#x3D;0) &#x2F;&#x2F;辗转相除    \n    &#123;        \n        r&#x3D;m%n;        \n        m&#x3D;n;        \n        n&#x3D;r;    \n    &#125;   \n \n    return n;\n&#125;</code></pre></p></li>\r\n<li><p>递归方法 <pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">int gcd(int x, int y)\n&#123;\tif (y)\t\t\t\n            return gcd(y, x%y);\t\t\n        else\t\t\t\n            return x;\n&#125;</code></pre></p></li>\r\n<li><p>位运算算法 <pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">int gcd(int x, int y)\n&#123;\n    while(y^&#x3D;x^&#x3D;y^&#x3D;x%&#x3D;y);\n    return x;\n&#125;</code></pre></p></li>\r\n</ul>\r\n","text":"最大公因数GCD 原理 利用了欧几里得算法，即辗转相除法 核心等式——gcd(a,b) = gcd(b,a mod b) 证明 a可以表示成a = kb + r（a，b，k，r皆为正整数) 假设d是a,b的一个公约数，记作d|a,d|b) 即a和b都可以被d整除。 而r = a ...","link":"","photos":[],"count_time":{"symbolsCount":888,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":11,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":11,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B0gcd\"><span class=\"toc-text\">最大公因数GCD</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%81%E6%98%8E\"><span class=\"toc-text\">证明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">算法实现</span></a></li></ol></li></ol></li></ol>","author":{"name":"碔砆","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/02/20/pSXmfmj.jpg","link":"/","description":"BUPT AI专业大二学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"批量规范化","uid":"232f9f51309688e33bd70bd8c0ccce09","slug":"批量规范化","date":"2023-02-27T11:23:00.000Z","updated":"2023-02-27T11:23:00.242Z","comments":true,"path":"api/articles/批量规范化.json","keywords":null,"cover":null,"text":" ","link":"","photos":[],"count_time":{"symbolsCount":2,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"碔砆","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/02/20/pSXmfmj.jpg","link":"/","description":"BUPT AI专业大二学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"GoogLeNet","uid":"f466839ba23e30f0626022c248cd73f5","slug":"GoogLeNet","date":"2023-02-24T12:58:30.000Z","updated":"2023-02-27T11:21:45.654Z","comments":true,"path":"api/articles/GoogLeNet.json","keywords":null,"cover":[],"text":"GoogLeNet Introduction GoogLeNet吸收了NiN中串联网络的思想，并在此基础上做了改进 这篇论文的一个重点是解决了什么样大小的卷积核最合适的问题 本文的一个观点是，有时使用不同大小的卷积核组合是有利的 模型结构——Inception块 在GoogLeN...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"AI学习","slug":"AI学习","count":11,"path":"api/categories/AI学习.json"},{"name":"经典模型","slug":"AI学习/经典模型","count":5,"path":"api/categories/AI学习/经典模型.json"}],"tags":[{"name":"AI学习","slug":"AI学习","count":11,"path":"api/tags/AI学习.json"},{"name":"经典模型","slug":"经典模型","count":6,"path":"api/tags/经典模型.json"}],"author":{"name":"碔砆","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/02/20/pSXmfmj.jpg","link":"/","description":"BUPT AI专业大二学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}