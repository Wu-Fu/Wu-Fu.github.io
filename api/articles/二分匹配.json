{"title":"二分匹配","uid":"4aa58050e03a812b4fa7990ab0778c08","slug":"二分匹配","date":"2022-01-17T08:44:06.000Z","updated":"2022-01-18T04:49:57.042Z","comments":true,"path":"api/articles/二分匹配.json","keywords":null,"cover":null,"content":"<h1 id=\"二分匹配\">二分匹配</h1>\r\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">bool dfs(int x)\n&#123;\n    for(int i&#x3D;1;i&lt;&#x3D;n;i++)\n    &#123;\n        if(mapp[x][i]&amp;&amp;(!used[i]))\n        &#123;\n            used[i]&#x3D;1;\n            if(linker[i]&#x3D;&#x3D;-1||dfs(linker[i]))\n            &#123;\n                linker[i]&#x3D;x;\n                return true;\n            &#125;\n        &#125;\n    &#125;\n    return false;\n&#125;\nint hungary()\n&#123;\n    int ans&#x3D;0;\n    memset(linker,-1,sizeof(linker));\n    for(int i&#x3D;1;i&lt;&#x3D;n;i++)\n    &#123;\n        memset(used,0,sizeof(used));\n        if(dfs(i)) ans++;\n    &#125;\n    return ans;\n&#125;</code></pre>\r\n","text":"二分匹配 bool dfs(int x) &#123; for(int i&#x3D;1;i&lt;&#x3D;n;i++) &#123; if(mapp[x][i]&amp;&amp;(!used[i])) &#123; used[i]&#x3D;1; if(linker[i]...","link":"","photos":[],"count_time":{"symbolsCount":600,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":11,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":11,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E5%88%86%E5%8C%B9%E9%85%8D\"><span class=\"toc-text\">二分匹配</span></a></li></ol>","author":{"name":"碔砆","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/02/20/pSXmfmj.jpg","link":"/","description":"BUPT AI专业大二学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"快速幂","uid":"9fc7aaa29955e8777b63cdc5e2f3c111","slug":"快速幂","date":"2022-02-14T03:22:15.000Z","updated":"2023-02-18T11:35:41.608Z","comments":true,"path":"api/articles/快速幂.json","keywords":null,"cover":null,"text":"快速幂 快速幂——OIWiki 在O(logn)的时间内计算 an 可以运用于模意义下取幂、矩阵幂等运算 算法描述 二进制取幂的想法是，我们将取幂的任务按照指数的 二进制表示 来分割成更小的任务。 因为有个二进制位，因此当我们知道了后，我们只用计算O(logn)次乘法就可以计算出...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":11,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":11,"path":"api/tags/算法.json"}],"author":{"name":"碔砆","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/02/20/pSXmfmj.jpg","link":"/","description":"BUPT AI专业大二学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"图的存储","uid":"8fd51d91ee8f082030932013cc236c76","slug":"图的存储","date":"2022-01-16T08:23:46.000Z","updated":"2022-01-16T08:43:28.285Z","comments":true,"path":"api/articles/图的存储.json","keywords":null,"cover":null,"text":"图的存储 直接存边 使用一个数组来存边，数组中的每个元素都包含一条边的起点与终点 struct edge&#123; int n,w; &#125; vector&lt;edge&gt; e; vector&lt;bool&gt; vis void dfs(int u) &#12...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":11,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":11,"path":"api/tags/算法.json"}],"author":{"name":"碔砆","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/02/20/pSXmfmj.jpg","link":"/","description":"BUPT AI专业大二学生","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}